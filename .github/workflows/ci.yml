name: Build Project [using jupyter-book]
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt
      - name: Install LaTeX dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y     \
            texlive-latex-recommended \
            texlive-latex-extra       \
            texlive-fonts-recommended \
            texlive-fonts-extra       \
            texlive-xetex             \
            latexmk                   \
            xindy
      - name: Set up Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: 1.6.0
      - name: Install IJulia and Setup Project
        shell: bash -l {0}
        run: |
          julia -e 'using Pkg; Pkg.add("IJulia");'
          julia --project --threads auto -e 'using Pkg; Pkg.instantiate();'
      # Download Jupyter Book Cache
      - name: Download "build" folder (cache)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: cache.yml
          branch: main
          name: build-cache
          path: _build
      # Build Assets (Download Notebooks and PDF via LaTeX)
      # - name: Build PDF from LaTeX
      #   shell: bash -l {0}
      #   run: |
      #     jb build lectures --builder pdflatex --path-output ./ -n --keep-going
      #     mkdir -p _build/html/_pdf
      #     cp -u _build/latex/*.pdf _build/html/_pdf
      - name: Build Download Notebooks (sphinx-tojupyter)
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ --builder=custom --custom-builder=jupyter
          mkdir -p _build/html/_notebooks
          cp -u _build/jupyter/*.ipynb _build/html/_notebooks
      # Build HTML (Website)
      - name: Build HTML
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ 
      - name: Save Build as Artifact
        uses: actions/upload-artifact@v1
        with:
          name: _build
          path: _build
      - name: Preview Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2.2
        with:
          publish-dir: '_build/html/'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Preview Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
